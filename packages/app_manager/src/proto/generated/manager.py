# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: manager/common.proto, manager/get_device_info.proto, manager/get_wallets.proto, manager/auth_device.proto, manager/auth_card.proto, manager/get_logs.proto, manager/train_joystick.proto, manager/train_card.proto, manager/firmware_update.proto, manager/wallet_selector.proto, manager/core.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto

from . import common
from . import error


class OnboardingStep(betterproto.Enum):
    ONBOARDING_STEP_VIRGIN_DEVICE = 0
    ONBOARDING_STEP_DEVICE_AUTH = 1
    ONBOARDING_STEP_JOYSTICK_TRAINING = 2
    ONBOARDING_STEP_CARD_CHECKUP = 3
    ONBOARDING_STEP_CARD_AUTHENTICATION = 4
    ONBOARDING_STEP_COMPLETE = 5


class AuthDeviceStatus(betterproto.Enum):
    AUTH_DEVICE_STATUS_INIT = 0
    AUTH_DEVICE_STATUS_USER_CONFIRMED = 1


class AuthCardStatus(betterproto.Enum):
    AUTH_CARD_STATUS_INIT = 0
    AUTH_CARD_STATUS_USER_CONFIRMED = 1
    AUTH_CARD_STATUS_SERIAL_SIGNED = 2
    AUTH_CARD_STATUS_CHALLENGE_SIGNED = 3
    AUTH_CARD_STATUS_PAIRING_DONE = 4


class GetLogsStatus(betterproto.Enum):
    GET_LOGS_STATUS_INIT = 0
    GET_LOGS_STATUS_USER_CONFIRMED = 1


class TrainJoystickStatus(betterproto.Enum):
    TRAIN_JOYSTICK_INIT = 0
    TRAIN_JOYSTICK_UP = 1
    TRAIN_JOYSTICK_RIGHT = 2
    TRAIN_JOYSTICK_DOWN = 3
    TRAIN_JOYSTICK_LEFT = 4
    TRAIN_JOYSTICK_CENTER = 5


class TrainCardStatus(betterproto.Enum):
    TRAIN_CARD_STATUS_INIT = 0
    TRAIN_CARD_STATUS_CARD_TAPPED = 1


class FirmwareUpdateError(betterproto.Enum):
    FIRMWARE_UPDATE_ERROR_UNKNOWN = 0
    FIRMWARE_UPDATE_ERROR_VERSION_NOT_ALLOWED = 1


@dataclass
class WalletItem(betterproto.Message):
    id: bytes = betterproto.bytes_field(1)
    name: str = betterproto.string_field(2)
    has_pin: bool = betterproto.bool_field(3)
    has_passphrase: bool = betterproto.bool_field(4)
    # This field determines whether the particular wallet is in usable state It
    # does not indicate why the wallet is not usable.
    is_valid: bool = betterproto.bool_field(5)


@dataclass
class SupportedAppletItem(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    version: common.Version = betterproto.message_field(2)


@dataclass
class GetDeviceInfoIntiateRequest(betterproto.Message):
    pass


@dataclass
class GetDeviceInfoResultResponse(betterproto.Message):
    device_serial: bytes = betterproto.bytes_field(1)
    firmware_version: common.Version = betterproto.message_field(2)
    is_authenticated: bool = betterproto.bool_field(3)
    applet_list: List["SupportedAppletItem"] = betterproto.message_field(4)
    is_initial: bool = betterproto.bool_field(5)
    onboarding_step: "OnboardingStep" = betterproto.enum_field(6)


@dataclass
class GetDeviceInfoRequest(betterproto.Message):
    initiate: "GetDeviceInfoIntiateRequest" = betterproto.message_field(
        1, group="request"
    )


@dataclass
class GetDeviceInfoResponse(betterproto.Message):
    result: "GetDeviceInfoResultResponse" = betterproto.message_field(
        1, group="response"
    )
    common_error: error.CommonError = betterproto.message_field(2, group="response")


@dataclass
class GetWalletsIntiateRequest(betterproto.Message):
    pass


@dataclass
class GetWalletsResultResponse(betterproto.Message):
    wallet_list: List["WalletItem"] = betterproto.message_field(1)


@dataclass
class GetWalletsRequest(betterproto.Message):
    initiate: "GetWalletsIntiateRequest" = betterproto.message_field(1, group="request")


@dataclass
class GetWalletsResponse(betterproto.Message):
    result: "GetWalletsResultResponse" = betterproto.message_field(1, group="response")
    common_error: error.CommonError = betterproto.message_field(2, group="response")


@dataclass
class AuthDeviceInitiateRequest(betterproto.Message):
    pass


@dataclass
class AuthDeviceChallengeRequest(betterproto.Message):
    challenge: bytes = betterproto.bytes_field(1)


@dataclass
class AuthDeviceResult(betterproto.Message):
    verified: bool = betterproto.bool_field(1)


@dataclass
class AuthDeviceSerialSigResponse(betterproto.Message):
    postfix1: bytes = betterproto.bytes_field(1)
    postfix2: bytes = betterproto.bytes_field(2)
    serial: bytes = betterproto.bytes_field(3)
    signature: bytes = betterproto.bytes_field(4)


@dataclass
class AuthDeviceChallengeSigResponse(betterproto.Message):
    postfix1: bytes = betterproto.bytes_field(1)
    postfix2: bytes = betterproto.bytes_field(2)
    signature: bytes = betterproto.bytes_field(3)


@dataclass
class AuthDeviceRequest(betterproto.Message):
    initiate: "AuthDeviceInitiateRequest" = betterproto.message_field(
        1, group="request"
    )
    challenge: "AuthDeviceChallengeRequest" = betterproto.message_field(
        2, group="request"
    )
    result: "AuthDeviceResult" = betterproto.message_field(3, group="request")


@dataclass
class AuthDeviceCompletion(betterproto.Message):
    pass


@dataclass
class AuthDeviceResponse(betterproto.Message):
    serial_signature: "AuthDeviceSerialSigResponse" = betterproto.message_field(
        1, group="response"
    )
    challenge_signature: "AuthDeviceChallengeSigResponse" = betterproto.message_field(
        2, group="response"
    )
    flow_complete: "AuthDeviceCompletion" = betterproto.message_field(
        4, group="response"
    )
    common_error: error.CommonError = betterproto.message_field(3, group="response")


@dataclass
class AuthCardInitiateRequest(betterproto.Message):
    card_index: int = betterproto.uint32_field(1, group="_card_index")
    # * true: allow pair card: 3 card taps (false 3rd beep if already paired)
    # false, undefined: do not pair card: 2 card taps
    is_pair_required: bool = betterproto.bool_field(2, group="_is_pair_required")


@dataclass
class AuthCardChallengeRequest(betterproto.Message):
    challenge: bytes = betterproto.bytes_field(1)


@dataclass
class AuthCardResult(betterproto.Message):
    verified: bool = betterproto.bool_field(1)


@dataclass
class AuthCardSerialSigResponse(betterproto.Message):
    serial: bytes = betterproto.bytes_field(1)
    signature: bytes = betterproto.bytes_field(2)


@dataclass
class AuthCardChallengeSigResponse(betterproto.Message):
    signature: bytes = betterproto.bytes_field(1)


@dataclass
class AuthCardFlowCompleteResponse(betterproto.Message):
    pass


@dataclass
class AuthCardRequest(betterproto.Message):
    initiate: "AuthCardInitiateRequest" = betterproto.message_field(1, group="request")
    challenge: "AuthCardChallengeRequest" = betterproto.message_field(
        2, group="request"
    )
    result: "AuthCardResult" = betterproto.message_field(3, group="request")


@dataclass
class AuthCardResponse(betterproto.Message):
    serial_signature: "AuthCardSerialSigResponse" = betterproto.message_field(
        1, group="response"
    )
    challenge_signature: "AuthCardChallengeSigResponse" = betterproto.message_field(
        2, group="response"
    )
    common_error: error.CommonError = betterproto.message_field(3, group="response")
    flow_complete: "AuthCardFlowCompleteResponse" = betterproto.message_field(
        4, group="response"
    )


@dataclass
class GetLogsInitiateRequest(betterproto.Message):
    pass


@dataclass
class GetLogsFetchNextRequest(betterproto.Message):
    pass


@dataclass
class GetLogsDataResponse(betterproto.Message):
    data: bytes = betterproto.bytes_field(1)
    has_more: bool = betterproto.bool_field(2)


@dataclass
class GetLogsErrorResponse(betterproto.Message):
    logs_disabled: bool = betterproto.bool_field(1)


@dataclass
class GetLogsRequest(betterproto.Message):
    initiate: "GetLogsInitiateRequest" = betterproto.message_field(1, group="request")
    fetch_next: "GetLogsFetchNextRequest" = betterproto.message_field(
        2, group="request"
    )


@dataclass
class GetLogsResponse(betterproto.Message):
    logs: "GetLogsDataResponse" = betterproto.message_field(1, group="response")
    common_error: error.CommonError = betterproto.message_field(2, group="response")
    error: "GetLogsErrorResponse" = betterproto.message_field(3, group="response")


@dataclass
class TrainJoystickInitiate(betterproto.Message):
    pass


@dataclass
class TrainJoystickRequest(betterproto.Message):
    initiate: "TrainJoystickInitiate" = betterproto.message_field(1, group="request")


@dataclass
class TrainJoystickResult(betterproto.Message):
    pass


@dataclass
class TrainJoystickResponse(betterproto.Message):
    result: "TrainJoystickResult" = betterproto.message_field(1, group="response")
    common_error: error.CommonError = betterproto.message_field(2, group="response")


@dataclass
class ExistingWalletItem(betterproto.Message):
    id: bytes = betterproto.bytes_field(1)
    name: str = betterproto.string_field(2)


@dataclass
class TrainCardInitiate(betterproto.Message):
    pass


@dataclass
class TrainCardVerification(betterproto.Message):
    self_created: bool = betterproto.bool_field(1)


@dataclass
class TrainCardResult(betterproto.Message):
    wallet_list: List["ExistingWalletItem"] = betterproto.message_field(1)
    card_paired: bool = betterproto.bool_field(2)


@dataclass
class TrainCardComplete(betterproto.Message):
    pass


@dataclass
class TrainCardRequest(betterproto.Message):
    initiate: "TrainCardInitiate" = betterproto.message_field(1, group="request")
    wallet_verify: "TrainCardVerification" = betterproto.message_field(
        2, group="request"
    )


@dataclass
class TrainCardResponse(betterproto.Message):
    result: "TrainCardResult" = betterproto.message_field(1, group="response")
    flow_complete: "TrainCardComplete" = betterproto.message_field(2, group="response")
    common_error: error.CommonError = betterproto.message_field(3, group="response")


@dataclass
class FirmwareUpdateInitiateRequest(betterproto.Message):
    version: common.Version = betterproto.message_field(1)


@dataclass
class FirmwareUpdateConfirmedResponse(betterproto.Message):
    pass


@dataclass
class FirmwareUpdateErrorResponse(betterproto.Message):
    error: "FirmwareUpdateError" = betterproto.enum_field(1)


@dataclass
class FirmwareUpdateRequest(betterproto.Message):
    initiate: "FirmwareUpdateInitiateRequest" = betterproto.message_field(
        1, group="request"
    )


@dataclass
class FirmwareUpdateResponse(betterproto.Message):
    confirmed: "FirmwareUpdateConfirmedResponse" = betterproto.message_field(
        1, group="response"
    )
    common_error: error.CommonError = betterproto.message_field(2, group="response")
    error: "FirmwareUpdateErrorResponse" = betterproto.message_field(
        3, group="response"
    )


@dataclass
class SelectWalletIntiateRequest(betterproto.Message):
    pass


@dataclass
class SelectWalletResultResponse(betterproto.Message):
    wallet: "WalletItem" = betterproto.message_field(1)


@dataclass
class SelectWalletRequest(betterproto.Message):
    initiate: "SelectWalletIntiateRequest" = betterproto.message_field(
        1, group="request"
    )


@dataclass
class SelectWalletResponse(betterproto.Message):
    result: "SelectWalletResultResponse" = betterproto.message_field(
        1, group="response"
    )
    common_error: error.CommonError = betterproto.message_field(2, group="response")


@dataclass
class Query(betterproto.Message):
    get_device_info: "GetDeviceInfoRequest" = betterproto.message_field(
        1, group="request"
    )
    get_wallets: "GetWalletsRequest" = betterproto.message_field(2, group="request")
    auth_device: "AuthDeviceRequest" = betterproto.message_field(3, group="request")
    auth_card: "AuthCardRequest" = betterproto.message_field(4, group="request")
    get_logs: "GetLogsRequest" = betterproto.message_field(5, group="request")
    train_joystick: "TrainJoystickRequest" = betterproto.message_field(
        6, group="request"
    )
    train_card: "TrainCardRequest" = betterproto.message_field(7, group="request")
    firmware_update: "FirmwareUpdateRequest" = betterproto.message_field(
        8, group="request"
    )
    select_wallet: "SelectWalletRequest" = betterproto.message_field(9, group="request")


@dataclass
class Result(betterproto.Message):
    get_device_info: "GetDeviceInfoResponse" = betterproto.message_field(
        1, group="response"
    )
    get_wallets: "GetWalletsResponse" = betterproto.message_field(2, group="response")
    auth_device: "AuthDeviceResponse" = betterproto.message_field(3, group="response")
    auth_card: "AuthCardResponse" = betterproto.message_field(4, group="response")
    get_logs: "GetLogsResponse" = betterproto.message_field(5, group="response")
    train_joystick: "TrainJoystickResponse" = betterproto.message_field(
        6, group="response"
    )
    train_card: "TrainCardResponse" = betterproto.message_field(7, group="response")
    common_error: error.CommonError = betterproto.message_field(8, group="response")
    firmware_update: "FirmwareUpdateResponse" = betterproto.message_field(
        9, group="response"
    )
    select_wallet: "SelectWalletResponse" = betterproto.message_field(
        10, group="response"
    )
