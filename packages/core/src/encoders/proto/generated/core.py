# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: version.proto, session.proto, core.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto

from . import common
from . import error


class DeviceWaitingOn(betterproto.Enum):
    DEVICE_WAITING_ON_NULL = 0
    DEVICE_WAITING_ON_IDLE = 1
    DEVICE_WAITING_ON_BUSY_IP_CARD = 2
    DEVICE_WAITING_ON_BUSY_IP_KEY = 3


class DeviceIdleState(betterproto.Enum):
    DEVICE_IDLE_STATE_NULL = 0
    DEVICE_IDLE_STATE_IDLE = 1
    DEVICE_IDLE_STATE_USB = 2
    DEVICE_IDLE_STATE_DEVICE = 3


class CmdState(betterproto.Enum):
    CMD_STATE_NONE = 0
    CMD_STATE_RECEIVING = 1
    CMD_STATE_RECEIVED = 2
    CMD_STATE_EXECUTING = 3
    CMD_STATE_DONE = 4
    CMD_STATE_FAILED = 5
    CMD_STATE_INVALID_CMD = 6


class ErrorType(betterproto.Enum):
    NO_ERROR = 0
    # * Invalid/unknown applet-id value
    UNKNOWN_APP = 1
    # * Decoding failed
    INVALID_MSG = 2
    # * Cannot start app as other app is running
    APP_NOT_ACTIVE = 3
    # * Timeout occured during an app
    APP_TIMEOUT_OCCURRED = 4
    # * Session invalid/establishment fail
    DEVICE_SESSION_INVALID = 5


@dataclass
class AppVersionItem(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    version: common.Version = betterproto.message_field(2)


@dataclass
class AppVersionIntiateRequest(betterproto.Message):
    pass


@dataclass
class AppVersionResultResponse(betterproto.Message):
    app_versions: List["AppVersionItem"] = betterproto.message_field(1)


@dataclass
class AppVersionRequest(betterproto.Message):
    initiate: "AppVersionIntiateRequest" = betterproto.message_field(1, group="request")


@dataclass
class AppVersionResponse(betterproto.Message):
    result: "AppVersionResultResponse" = betterproto.message_field(1, group="response")
    common_error: error.CommonError = betterproto.message_field(2, group="response")


@dataclass
class AppVersionCmd(betterproto.Message):
    request: "AppVersionRequest" = betterproto.message_field(1, group="cmd")
    response: "AppVersionResponse" = betterproto.message_field(2, group="cmd")


@dataclass
class SessionStartInitiateRequest(betterproto.Message):
    pass


@dataclass
class SessionStartInitiateResultResponse(betterproto.Message):
    device_random_public: bytes = betterproto.bytes_field(1)
    device_id: bytes = betterproto.bytes_field(2)
    signature: bytes = betterproto.bytes_field(3)
    postfix1: bytes = betterproto.bytes_field(4)
    postfix2: bytes = betterproto.bytes_field(5)
    key_index: int = betterproto.uint32_field(6)


@dataclass
class SessionStartBeginRequest(betterproto.Message):
    session_random_public: bytes = betterproto.bytes_field(1)
    session_age: int = betterproto.uint32_field(2)
    signature: bytes = betterproto.bytes_field(3)
    device_id: bytes = betterproto.bytes_field(4)


@dataclass
class SessionStartAckResponse(betterproto.Message):
    pass


@dataclass
class SessionStartRequest(betterproto.Message):
    initiate: "SessionStartInitiateRequest" = betterproto.message_field(
        1, group="request"
    )
    start: "SessionStartBeginRequest" = betterproto.message_field(2, group="request")


@dataclass
class SessionStartResponse(betterproto.Message):
    confirmation_initiate: "SessionStartInitiateResultResponse" = (
        betterproto.message_field(1, group="response")
    )
    confirmation_start: "SessionStartAckResponse" = betterproto.message_field(
        2, group="response"
    )
    common_error: error.CommonError = betterproto.message_field(5, group="response")


@dataclass
class SessionStartCmd(betterproto.Message):
    request: "SessionStartRequest" = betterproto.message_field(1, group="cmd")
    response: "SessionStartResponse" = betterproto.message_field(2, group="cmd")


@dataclass
class SessionCloseClearRequest(betterproto.Message):
    pass


@dataclass
class SessionCloseClearResponse(betterproto.Message):
    pass


@dataclass
class SessionCloseRequest(betterproto.Message):
    clear: "SessionCloseClearRequest" = betterproto.message_field(1, group="request")


@dataclass
class SessionCloseResponse(betterproto.Message):
    clear: "SessionCloseClearResponse" = betterproto.message_field(1, group="response")
    common_error: error.CommonError = betterproto.message_field(2, group="response")


@dataclass
class SessionCloseCmd(betterproto.Message):
    request: "SessionCloseRequest" = betterproto.message_field(1, group="cmd")
    response: "SessionCloseResponse" = betterproto.message_field(2, group="cmd")


@dataclass
class ErrorCmd(betterproto.Message):
    applet_id: int = betterproto.uint32_field(1)
    type: "ErrorType" = betterproto.enum_field(2)


@dataclass
class Status(betterproto.Message):
    device_waiting_on: "DeviceWaitingOn" = betterproto.enum_field(1)
    device_idle_state: "DeviceIdleState" = betterproto.enum_field(2)
    abort_disabled: bool = betterproto.bool_field(3)
    current_cmd_seq: int = betterproto.uint32_field(4)
    cmd_state: "CmdState" = betterproto.enum_field(5)
    # flow_status field can hold multiple enums of 1-byte LSB can be of type
    # GetPublicKeyStatus LSB + 1 can be of type SeedGenerationStatus
    flow_status: int = betterproto.uint32_field(6)


@dataclass
class Command(betterproto.Message):
    applet_id: int = betterproto.uint32_field(1)


@dataclass
class Msg(betterproto.Message):
    cmd: "Command" = betterproto.message_field(1, group="type")
    error: "ErrorCmd" = betterproto.message_field(2, group="type")
    app_version: "AppVersionCmd" = betterproto.message_field(3, group="type")
    session_start: "SessionStartCmd" = betterproto.message_field(4, group="type")
    session_close: "SessionCloseCmd" = betterproto.message_field(5, group="type")
